{"string_algorithms/src/kmp_algorithm": ["README.md", "kmp_algorithm.cpp", "kmp.py"], "string_algorithms/src/lipogram_checker": ["lipogram_checker.js", "lipogram_checker.cs", "lipogram_checker.py", "lipogram_checker.cpp"], "string_algorithms/src/pangram_checker": ["pangram_checker.swift", "Pangram.java", "pangram_checker.c", "pangram.rb", "pangram_checker.py", "pangram_checker.php", "pangram-checker.js", "pangram_checker.m", "pangram_checker.go", "pangram.cpp"], "string_algorithms/src/password_strength_checker": ["README.md", "pw_checker.js", "pw_checker.py", "pw_checker.cpp", "pw_checker.java", "pw_checker.cs"], "string_algorithms/src/anagram_search": ["anagram_search.swift", "anagram_search.go", "README.md", "anagram_search.cpp", "anagram_search.java", "anagram_search.c", "anagram_search.js", "anagram_search.py", "anagram_search.cs", "anagram_search.rb"], "string_algorithms/src/morse_code": ["morsecode.js", "morsecode.go", "morsecode.py"], "string_algorithms/src/boyer_moore_algorithm": ["boyer_moore_algorithm.cpp", "README.md", "boyer_moore_algorithm2.c", "boyer_moore_algorithm.c"], "string_algorithms/src/remove_dups": ["remove_dumps.py", "remove_dups.cpp", "remove_dups.c"], "string_algorithms/src/manachar_algorithm": ["manachar_longest_palindromic_subs.cpp", "manachar_longest_palindromic_subs.py"], "string_algorithms/src/finite_automata": ["README.md", "SearchStringUsingDFA.java", "SearchStringUsingDFA.rs"], "string_algorithms/src/palindrome_checker": ["palindrome.cs", "palindrome.php", "Palindrome.purs", "palindrome.lua", "palindrome.sh", "palindrome.ex", "palindrome.erl", "palindrome.c", "palindrome.go", "palindrome.hs", "palindrome.py", "palindrome.swift", "palindrome.cpp", "palindrome.js", "Palindrome.java", "palindrome.clj", "palindrome.rs", "Palindrome.kt", "palindrome.rb"], "string_algorithms/src/levenshtein_distance": ["LevenshteinDistance.java"], "string_algorithms/src/arithmetic_on_large_numbers": ["string_subtract.cpp", "string_addition.cpp", "string_multiplication.cpp", "string_factorial.cpp"], "string_algorithms/src/rabin_karp_algorithm": ["README.md", "rabin_karp.py", "RabinKarp.java", "rabin-karp.c"], "string_algorithms/src/naive_pattern_search": ["README.md", "naive_pattern_search.py"], "string_algorithms/src/trie_pattern_search": ["README.md", "trie.cpp"], "string_algorithms/src/aho_corasick_algorithm": ["README.md", "aho_corasick_algorithm2.cpp", "aho_corasick_algorithm.java", "aho_corasick_algorithm.cpp"], "string_algorithms/src/kasai_algorithm": ["kasai_algorithm.cpp", "README.md"], "string_algorithms/src/suffix_array": ["README.md", "suffixArray.java"], "string_algorithms/src/z_algorithm": ["README.md", "z_algorithm.cpp", "z_algorithm.py", "z_algorithm_z_array.cpp"], "string_algorithms/test": ["README.md"], "computational_geometry/src/jarvis_march": ["README.md", "jarvis_march.py", "jarvis_march.cpp"], "computational_geometry/src/2d_line_intersection": ["README.md", "line.js", "line.java", "line.cpp", "line.py", "line.c", "line2dintersection.hs", "line.cs", "line.rb"], "computational_geometry/src/distance_between_points": ["README.md", "distance_between_points.c", "distance_between_points.js", "distance_between_points.py", "DistanceBetweenPoints.java", "distance_between_points.cpp", "distance_between_points.go", "distance_between_points.rs"], "computational_geometry/src/cohen_sutherland_lineclip": ["README.md", "lineclip.c"], "computational_geometry/src/halfplane_intersection": ["halfplane_intersection.cpp"], "computational_geometry/src/area_of_polygon": ["area_of_polygon.cpp", "AreaOfPolygon.java", "area_of_polygon.py", "area_of_polygon.c"], "computational_geometry/src/2d_separating_axis_test": ["sat.cpp"], "computational_geometry/src/axis_aligned_bounding_box_collision": ["axis_aligned_bounding_box_collision.cpp", "axis_aligned_bounding_box_collision.go"], "computational_geometry/src/graham_scan": ["graham_scan.cpp", "GrahamScan.java"], "computational_geometry/src/area_of_triangle": ["area_of_triangle.js", "AreaOfTriangle.java", "area_of_triangle.py", "area_of_triangle.cpp", "area_of_triangle.go", "area_of_triangle.c", "area_of_triangle.rs"], "computational_geometry/src/sutherland_hodgeman_clipping": ["README.md", "sutherland.cpp", "sutherland.c"], "computational_geometry/src/bresenham_line": ["bresenham_line.py", "bresenham_line.cpp"], "computational_geometry/src/quickhull": ["README.md", "test_data.csv", "test_data_soln.txt", "test_data_soln.png", "quickhull.hs", "quickhull.java", "quickhull.cpp"], "computational_geometry/test": ["README.md"], "numerical_analysis/runge_kutt/src": ["rk4.cpp", "rk4.py", "rk4.c"], "numerical_analysis/integral/src": ["integral_trapezoid.py", "integral_rectangle.c", "integral_trapezoid.c", "integral_rectangle.cpp", "integral_rectangle.py", "integral_trapezoid.cpp"], "numerical_analysis/monte_carlo/src": ["pi_montecarlo.py", "pi_monte_carlo.cpp", "integral_monte_carlo.cpp", "pi_montecarlo.c", "integral_montecarlo.c", "integral_montecarlo.py"], "selection_algorithms/src/median-of-medians": ["median_of_medians.c", "median_of_medians.py", "median_of_medians.hs"], "selection_algorithms/test": ["README.md"], "divide_conquer/src/karatsuba_multiplication": ["multiply.java"], "divide_conquer/src/warnock_algorithm": ["warnock_algorithm.pde"], "divide_conquer/src/x_power_y": ["x_power_y.c"], "divide_conquer/src/quick_sort": ["quick_sort.swift", "README.md", "quick_sort.cpp", "quick_sort_java", "quick_sort2.cpp", "quick_sort.hs", "quick_sort.rs", "quick_sort.py", "quick_sort.c"], "divide_conquer/src/merge_sort_using_divide_and_conquer": ["README.md", "merge_sort_using_divide_and_conquer.java", "inversions.c", "merge_sort_using_divide_and_conquer.cpp"], "divide_conquer/src/tournament_method_to_find_min_max": ["tournament_method_to_find_min_max.c"], "divide_conquer/src/closest_pair_of_points": ["closest_pair.cpp", "closest_pair.py"], "divide_conquer/src/inversion_count": ["count_inversions.c", "README.md", "inversion_count.py", "inversion_count.js", "inversion_count.java", "inversion_count.cpp"], "divide_conquer/test": ["README.md"], "search/src/interpolation_search": ["interpolation_search.php", "README.md", "interpolation_search.go", "interpolation_search.c", "interpolation_search.py", "interpolation_search.java", "interpolation_search.cpp"], "search/src/fuzzy_search": ["fuzzy_search.php", "fuzzy_search.js"], "search/src/ternary_search": ["Ternary_search.java", "ternary_search.go", "README.md", "ternary_search.js", "ternary_search.c", "ternary_search.py", "ternary_search.kt", "ternary_search.rs", "ternary_search.php", "ternary_search.cpp"], "search/src/linear_search": ["linear_search.py", "README.md", "linear_search.rb", "linear_search.nim", "linear_search.go", "linear_search.ml", "linear_search.hs", "linear_search.php", "linear_search.java", "linear_search.kt", "linear_search.js", "linear_search.clj", "linear_search.rs", "linear_search.cs", "linear_search.swift", "linear_search.scala", "SentinelLinearSearch.cpp", "linear_search.cpp", "linear_search.c"], "search/src/binary_search": ["binary_search.scala", "binary_search.php", "README.md", "binary_search.java", "binary_search.hs", "binary_search.cs", "binary_search.py", "binary_search.kt", "binary_search.cpp", "binary_search.go", "binary_search.rkt", "binary_search_2.cpp", "binary_search.swift", "binary_search.rb", "binary_search.js", "binary_search.c", "binary_search.rs", "binary_search.sh"], "search/src/exponential_search": ["README.md", "exponential_search.c", "exponential_search.js", "exponential_search.rs", "exponential_search.java", "exponential_search.php", "exponential_search.go", "exponential_search2.cpp", "exponential_search.rb", "exponential_search.cpp", "exponential_search2.py"], "search/src/jump_search": ["README.md", "jump_search.php", "jump_search.py", "jump_search.rs", "jump_search.java", "jump_search.swift", "jump_search.c", "jump_search.js", "jump_search.go", "jump_search.cpp"], "search/src/fibonacci_search": ["fibonacci_search.js", "fibonacci_search.py", "fibonacci_search.c", "fibonacci_search.swift", "fibonacci_search.cpp"], "search/test": ["README.md", "test_search.py", "test_search.cpp"], "cellular_automaton/src/von_neumann_cellular_automata": ["README.md"], "cellular_automaton/src/conways_game_of_life": ["life.py", "life.c", "README.md", "life.cpp", "life.rb", "conways_game_of_life.rb", "game_of_life_C_SDL.c", "GameOfLife.hs", "life.go", "Conway.java"], "cellular_automaton/src/langtons_ant": ["README.md", "LangtonAnt.py", "LangtonAnt.java", "LangtonAnt.html", "LangtonAnt.cpp"], "cellular_automaton/src/genetic_algorithm": ["genetic_algorithm.go", "genetic_algorithm2.py", "genetic_algorithm.js", "genetic.cpp", "genetic_algorithm.java", "genetic_algorithm.py"], "cellular_automaton/src/elementary_cellular_automata": ["README.md", "ElementaryCellularAutomaton.java"], "cellular_automaton/src/nobili_cellular_automata": ["README.md"], "cellular_automaton/src/brians_brain": ["README.md"], "cellular_automaton/test": ["README.md"], "greedy_algorithms/src/kruskal_minimum_spanning_tree": ["README.md", "kruskal.c", "kruskal.py", "kruskal.cpp"], "greedy_algorithms/src/huffman_coding": ["README.md", "huffman_coding.cpp", "huffman_coding.py"], "greedy_algorithms/src/activity_selection": ["README.md", "activity_selection.py", "activity_selection.cpp", "activity_selection.java"], "greedy_algorithms/src/dijkstra_shortest_path": ["README.md", "dijkstra_shortest_path.java", "dijkstra-shortest-path.cpp", "dijkstra_shortest_path.py", "dijkstra_shortest_path.c"], "greedy_algorithms/src/job_sequencing": ["README.md", "job_sequencing.py", "job_sequencing.cpp"], "greedy_algorithms/src/k_centers": ["README.md", "k_centers.py"], "greedy_algorithms/src/fractional_knapsack": ["fractional_knapsack.go", "fractional_knapsack.cs", "README.md", "fractional_knapsack.c", "fractional_knapsack.cpp", "fractional_knapsack.py", "fractional_knapsack.java"], "greedy_algorithms/src/prim_minimum_spanning_tree": ["prim_minimum_spanning_tree.hs", "prim_minimum_spanning_tree.py", "README.md", "prim_minimum_spanning_tree.cpp"], "greedy_algorithms/src/hillclimber": ["Hillclimber.java"], "greedy_algorithms/src/egyptian_fraction": ["egyptian_fraction.py", "egyptian_fraction.c", "egyptian_fraction.cpp"], "greedy_algorithms/src/warshall": ["warshalls.c"], "greedy_algorithms/src/minimum_coins": ["minimum_coins.py", "README.md", "minimum_coins.c", "minimum_coins.cpp", "MinimumCoins.hs", "MinimumCoins.java", "minimum_coins.go", "minimum-coins.js"], "greedy_algorithms/test/kruskal_minimum_spanning_tree": ["test_kruskal.cpp"], "dynamic_programming/src/longest_palindromic_substring": ["README.md", "longest_palindromic_substring.cpp"], "dynamic_programming/src/shortest_common_supersequence": ["README.md", "SCS.java", "shortest_common_supersequence.cpp", "shortest_common_supersequence.py"], "dynamic_programming/src/maximum_weight_independent_set_of_path_graph": ["maximum_weight_independent_set_of_path_graph.cpp"], "dynamic_programming/src/weighted_job_scheduling": ["README.md", "weighted_job_scheduling.cpp"], "dynamic_programming/src/no_consec_ones": ["no_consec_ones.py", "README.md", "no_consec_1.cpp"], "dynamic_programming/src/Optimal_Binary_Search_Tree": ["Optimal_BST.py"], "dynamic_programming/src/coin_change": ["README.md", "coin_change.py", "coin_change.java", "coinchange.go", "coinchange.cpp", "coinchange.c", "mincoinchange.cpp"], "dynamic_programming/src/longest_common_substring": ["longest_common_substring.cpp"], "dynamic_programming/src/knapsack": ["README.md", "knapsack.js", "Knapsack.java", "knapsack.c", "knapsack.go", "knapsack.py", "knapsack.cpp"], "dynamic_programming/src/edit_distance": ["README.md", "edit_distance.java", "edit_distance_backtracking.cpp", "edit_distance.go", "edit_distance_hirschberg.cpp", "edit_distance.py", "edit_distance.c", "edit_distance.hs", "edit_distance.cpp"], "dynamic_programming/src/boolean_parenthesization": ["boolean_parenthesization.cpp", "README.md", "boolean_parenthesization.java", "boolean_parenthesization.c", "boolean_parenthesization.py", "boolean_parenthesization.swift"], "dynamic_programming/src/maximum_sum_sub_matrix": ["maximum_sum_sub_matrix.java", "maximum_sum_sub_matrix.cpp"], "dynamic_programming/src/maximum_sum_increasing_subsequence": ["README.md", "maximum_sum_increasing_subsequence.c"], "dynamic_programming/src/factorial": ["factorial.scala", "factorial.go", "factorial.java", "factorial.rs", "factorial.exs", "factorial.py", "factorial.c"], "dynamic_programming/src/binomial_coefficient": ["binomial_coefficient.py", "README.md", "binomial_coefficient.cpp", "binomial_coefficient.js", "binomial_coefficient.c", "binomial_coefficient.java"], "dynamic_programming/src/longest_common_increasing_subsequence": ["longest_common_increasing_subsequence.cpp"], "dynamic_programming/src/palindrome_partition": ["README.md", "palindrome_partition.js", "palindrome_partition.cpp"], "dynamic_programming/src/longest_palindromic_sequence": ["longest_palindromic_sequence.c", "README.md", "longest_palindromic_sequence.py", "longest_palindromic_sequence.js", "longest_palindromic_sequence.cpp"], "dynamic_programming/src/egg_dropping_puzzle": ["README.md", "egg_dropping_puzzle.hs", "egg_dropping_puzzle.py", "egg_dropping_puzzle.c", "egg_dropping_puzzle.cpp"], "dynamic_programming/src/matrix_chain_multiplication": ["README.md", "matrix_chain_multiplication.c", "matrix_chain_multiplication.cpp", "MatrixChainMultiplication.java", "matrix_chain_multiplication.py"], "dynamic_programming/src/box_stacking": ["README.md", "box_stacking.cpp", "box_stacking.java", "box_stacking.py"], "dynamic_programming/src/longest_independent_set": ["README.md"], "dynamic_programming/src/minimum_insertion_palindrome": ["minimum_insertions_palindrome_using_lcs.cpp"], "dynamic_programming/src/longest_increasing_subsequence": ["longest_increasing_subsequence.c", "README.md", "longest_increasing_subsequence_using_segment_tree.cpp", "longest_increasing_subsequence.go", "longest_increasing_subsequence.js", "longest_increasing_subsequence.cpp", "longest_increasing_subsequence.java", "longest_increasing_subsequence.py"], "dynamic_programming/src/Array_Median": ["Median.java", "median.cpp", "median.py", "median.rs", "median.rb", "median.c", "median.php"], "dynamic_programming/src/tiling_problem": ["README.md", "tiling.c", "tiling.py", "tiling.cpp"], "dynamic_programming/src/largest_sum_contiguous_subarray": ["README.md", "largest_sum_contiguous_subarray.go", "largest_sum_contiguous_subarray.java", "largest_sum_contiguous_subarray.py", "largest_sum_contiguous_subarray.c", "largest_sum_contiguous_subarray.hs", "largest_sum_contiguous_subarray.cpp"], "dynamic_programming/src/minimum_cost_polygon_triangulation": ["README.md"], "dynamic_programming/src/min_cost_path": ["README.md", "min_cost_path.py", "min_cost_path.cpp", "min_cost_path.c", "min_cost_path.java"], "dynamic_programming/src/subset_sum": ["subset_sum.cpp", "README.md", "subset_sum.java", "subset_sum.go", "subset_sum.py"], "dynamic_programming/src/longest_common_subsequence": ["README.md", "Longest_Common_Subsequence.py", "longestCommonSubsequence.go", "longest_common_subsequence.cpp", "LongestCommonSubsequence.java", "LongestCommonSubsequenceRec.java"], "dynamic_programming/src/rod_cutting": ["rod_cutting.cpp", "README.md", "rod_cutting.hs", "rod_cutting.py", "rod_cutting.c"], "dynamic_programming/src/numeric_keypad_problem": ["numeric_keypad_problem.cpp"], "dynamic_programming/src/longest_bitonic_sequence": ["README.md", "longestBitonicSeq.cpp", "longest_bitonic_sequence.c", "longest_bitonic_sequence.py", "longestBitonicSequence.java", "longest_bitonic_sequence.js"], "dynamic_programming/test/subset_sum": ["test_subset_sum.cpp"], "online_challenges/src/project_euler/problem_002": ["README.md", "problem_002.cpp", "problem_002.py", "problem_002.js"], "online_challenges/src/project_euler/problem_036": ["problem_036.py", "README.md", "problem_036.cpp"], "online_challenges/src/project_euler/problem_016": ["README.md", "problem_016.py"], "online_challenges/src/project_euler/problem_003": ["README.md", "problem_003.py", "problem_003.cpp"], "online_challenges/src/project_euler/problem_025": ["README.md", "problem_025.py"], "online_challenges/src/project_euler/problem_007": ["README.md", "problem_007.cpp"], "online_challenges/src/project_euler/problem_008": ["README.md", "problem_008.py"], "online_challenges/src/project_euler/problem_004": ["README.md", "problem_004.cpp", "problem_004.py"], "online_challenges/src/project_euler/problem_028": ["README.md", "problem_028.py", "problem_028.cpp"], "online_challenges/src/project_euler/problem_006": ["README.md", "problem_006.cpp", "problem_006.py"], "online_challenges/src/project_euler/problem_010": ["README.md", "problem_010.cpp"], "online_challenges/src/project_euler/problem_102": ["README.md", "problem_102.cpp", "triangles.txt"], "online_challenges/src/project_euler/problem_001": ["README.md", "problem_001.py", "problem_001.js", "problem_001.cpp"], "online_challenges/src/project_euler/problem_005": ["README.md", "problem_005.cpp"], "online_challenges/src/project_euler/problem_009": ["README.md", "problem_009.cpp"], "online_challenges/src/project_euler/problem_014": ["README.md", "problem_014.cpp"], "online_challenges/src/rosalind/complement_dna_strand": ["complement_dna_strand.exs"], "online_challenges/test": ["README.md"], "operating_system/src/scheduling/shortest_seek_time_first": ["shortest_seek_time_first.c", "shortest_seek_time_first.cpp"], "operating_system/src/scheduling/multi_level_feedback_queue_scheduling": ["mlfq.ts"], "operating_system/src/scheduling/smallest_remaining_time_first": ["srtf.c"], "operating_system/src/scheduling/round_robin_scheduling/round_robin_c": ["README.md", "queue.h", "round_robin.c", "queue.c"], "operating_system/src/scheduling/first_come_first_serve": ["fcfs.java", "fcfs.cpp", "fcfs.py", "fcfs.rs", "fcfs.cs"], "operating_system/src/memory_management/least_recently_used": ["lru.c"], "operating_system/src/shell/C": ["README.md", "Shell.c", "Makefile"], "operating_system/src/deadlocks/bankers_algorithm": ["banker_safety.cpp"], "operating_system/src/concurrency/readers_writers": ["readers_writers.cpp"], "operating_system/src/concurrency/dining_philosophers": ["README.md", "dining_philosophers.c"], "operating_system/src/concurrency/monitors/monitors_system_v": ["main.c", "monitors.c", "monitor.h"], "operating_system/src/concurrency/peterson_algorithm_for_mutual_exclusion/peterson_algorithm_in_c": ["peterson_algo_mutual_exclusion_in_c.c", "mythreads.h"], "operating_system/src/concurrency/producer_consumer": ["producer_consumer.cpp"], "operating_system/test": ["README.md"], "networking/src/validate_IP": ["is_valid_ip.php", "README.md", "validate_ip.sh", "validate_ipv4.js", "validate_ipv4.py", "ipv4_check.go", "Validate_connection_ipv4.py", "validate_ip.rb", "validate_ip.c"], "networking/src/determine_endianess": ["determine_endianess.c"], "networking/test": ["README.md"], "data_structures/src/list/singly_linked_list/operations/find": ["SearchElement_list.java"], "data_structures/src/list/singly_linked_list/operations/detect_cycle": ["detect_cycle.cpp"], "data_structures/src/list/singly_linked_list/operations/sort": ["bubble_sort.cpp"], "data_structures/src/list/singly_linked_list/operations/delete": ["delete_node_with_key.java"], "data_structures/src/list/singly_linked_list/operations/merge_sorted": ["merge_sorted.cpp"], "data_structures/src/list/singly_linked_list/operations/reverse": ["reverse.cpp", "reverse_recursion2.cpp", "reverse_iteration.cpp", "reverse.c", "reverse_recursion.cpp"], "data_structures/src/list/singly_linked_list/operations/print_reverse": ["print_reverse.py", "print_reverse.scala"], "data_structures/src/list/singly_linked_list/operations/push": ["push.cpp"], "data_structures/src/list/singly_linked_list/operations/unclassified": ["LinkedList.java", "union_intersection_in_list.textClipping", "linked_List_Operations.cpp", "union_intersection_in_list.c"], "data_structures/src/list/singly_linked_list/operations/n_th_node_linked_list": ["nth_node_from_end.cpp", "nth_node_from_end.c"], "data_structures/src/list/singly_linked_list/operations/rotate": ["rotate.cpp"], "data_structures/src/list/xor_linked_list": ["README.md", "xor_linked_list.cpp"], "data_structures/src/list/skip_list": ["skip_list.java", "README.md", "skip_list.swift", "skip_list.cpp", "skip_list.c", "skip_list.scala"], "data_structures/src/list/doubly_linked_list/C": ["doubly_linked_list.h", "doubly_linked_list.c"], "data_structures/src/list/circular_linked_list/operations": ["has_loop.py", "is_circular.py"], "data_structures/src/tree/b_tree/b_tree/b_tree_C": ["README.md", "main.c", "btree.h", "btree.c"], "data_structures/src/tree/b_tree/two_three_tree": ["TwoThreeTree.scala"], "data_structures/src/tree/binary_tree/treap": ["treap.swift", "treap.java", "treap.scala", "persistent_treap.kt", "treap.cpp"], "data_structures/src/tree/binary_tree/aa_tree": ["README.md", "aa_tree.cpp"], "data_structures/src/tree/binary_tree/binary_tree/convert_to_doubly_linked_list": ["convert_to_doubly_linked_list.cpp"], "data_structures/src/tree/binary_tree/binary_tree/diameter": ["diameter.py", "README.md", "diameter2.c", "diameter.java", "diameter2.cpp", "diameter.hs", "diameter.cpp", "diameter.c"], "data_structures/src/tree/binary_tree/binary_tree/minimum_height": ["minimum_height.cpp", "minimum_height.java", "README.md", "minimum_height.py", "minimum_height.c"], "data_structures/src/tree/binary_tree/binary_tree/is_binary_tree": ["is_binary_tree.cpp"], "data_structures/src/tree/binary_tree/binary_tree/is_balance": ["README.md", "is_balance.java"], "data_structures/src/tree/binary_tree/binary_tree/node": ["node.cpp"], "data_structures/src/tree/binary_tree/binary_tree/serializer": ["serializer.cpp"], "data_structures/src/tree/binary_tree/binary_tree/tree/bottom_view_binary_tree": ["bottom_view_tree.java", "bottom_view_tree.cpp"], "data_structures/src/tree/binary_tree/binary_tree/make_binary_tree/from_inorder_and_preorder": ["README.md", "make_tree_from_inorder_and_preorder.c", "make_tree_from_inorder_and_preorder.java", "make_tree_from_inorder_and_preorder.cpp"], "data_structures/src/tree/binary_tree/binary_tree/maximum_height": ["README.md", "maximum_height.py", "maximum_height.java", "maximum_height2.cpp", "maximum_height.cpp"], "data_structures/src/tree/binary_tree/binary_tree/make_mirror_tree": ["README.md", "make_mirror_tree.c", "make_mirror_tree.py", "make_mirror_tree.cpp"], "data_structures/src/tree/binary_tree/binary_tree/is_same": ["is_same.cpp"], "data_structures/src/tree/binary_tree/binary_tree/traversal/inorder/right_threaded": ["right_threaded.cpp"], "data_structures/src/tree/binary_tree/binary_tree/traversal/zigzag": ["zigzag.cpp"], "data_structures/src/tree/binary_tree/binary_tree/traversal/preorder/right_view": ["right_view2.cpp", "README.md", "right_view.py", "right_view.cpp"], "data_structures/src/tree/binary_tree/binary_tree/traversal/preorder/left_view": ["left_view.java"], "data_structures/src/tree/binary_tree/binary_tree/path_sum/sum_left": ["sum_left.c", "README.md"], "data_structures/src/tree/binary_tree/rope": ["rope.py"], "data_structures/src/tree/binary_tree/avl_tree": ["avl_tree.cpp", "avl_tree.java", "avl_tree.swift", "avl_tree.c"], "data_structures/src/tree/tree/trie": ["trie.go", "README.md", "trie.scala", "trie.py", "trie.rb", "trie.cpp", "trie.c", "trie.java", "trie.cs", "trie.swift"], "data_structures/src/tree/tree/suffix_array": ["suffix_array.cpp"], "data_structures/src/tree/heap/min_heap": ["min_heap.rb", "min_heap.py", "min_heap.c", "min_heap.java", "min_heap.cpp", "min_heap.swift", "min_heap.js"], "data_structures/src/tree/heap/soft_heap": ["soft_heap.cpp"], "data_structures/src/tree/heap/max_heap": ["max_heap.cpp", "max_heap.java", "max_heap.c", "max_heap.go", "max_heap.py"], "data_structures/src/tree/heap/priority_queue/leftist_tree": ["leftist_priority_queue.cpp"], "data_structures/src/tree/heap/binomial_heap": ["binomial_heap.scala", "binomial_heap.c", "binomial_heap.cpp"], "data_structures/src/tree/heap/pairing_heap": ["README.md", "pairing_heap.fs", "pairing_heap.sml"], "data_structures/src/tree/segment_tree": ["segment_Tree_rmq.adb"], "data_structures/src/tree/space_partitioning_tree/quad_tree": ["quad_tree.swift"], "data_structures/src/tree/space_partitioning_tree/kd_tree": ["kd_tree.java", "kd_tree.cpp"], "data_structures/src/tree/space_partitioning_tree/interval_tree": ["interval_tree.java", "README.md", "interval_tree.cpp"], "data_structures/src/tree/space_partitioning_tree/segment_tree": ["segment_tree.scala", "persistent_segment_tree_sum.cpp", "README.md", "segment_tree.java", "segment_tree_kth_statistics_on_segment.cpp", "segment_tree_sum.go", "segment_tree_sum.py", "segment_tree_rmq.cpp", "segment_tree_rmq.py", "lazy_segment_tree.java", "segment_tree_lazy_propagation.cpp", "segment_tree_rmq.go", "segment_tree_sum.rb", "segment_tree_sum.cpp"], "data_structures/src/tree/multiway_tree/splay_tree": ["splay_tree.cpp", "readme.md", "splay_tree.scala", "splay_tree.go", "splay_tree.kt", "splay_tree.java"], "data_structures/src/tree/multiway_tree/fenwick_tree": ["fenwick_tree.cpp", "README.md", "fenwick_tree.java", "fenwick_tree_inversion_count.cpp", "fenwick_tree.pl", "fenwick_tree.go", "fenwick_tree.py", "fenwick_tree.c"], "data_structures/src/tree/multiway_tree/van_emde_boas_tree": ["van_emde_boas.cpp"], "data_structures/src/tree/multiway_tree/union_find": ["README.md", "union_find.java", "union_find.scala", "union_find.go", "union_find.js", "union_find.py", "union_find_dynamic.cpp", "union_find.cpp", "union_find.c"], "data_structures/src/tree/multiway_tree/red_black_tree": ["red_black_tree.cpp", "red_black_tree.rb", "red_black_tree.test.cpp", "red_black_tree.java", "red_black_tree.c", "red_black_tree.scala", "red_black_tree.h"], "data_structures/src/hashs/hash_table": ["hash_table.js", "hash_table.go", "README.md", "double_hashing.c", "hash_table.java", "hash_table.c", "hash_table.cpp", "hash_table.rs", "hash_table.cs", "hash_table.swift", "hash_table.py"], "data_structures/src/hashs/bloom_filter": ["bloom_filter.js", "bloomFilter.go", "README.md", "bloom_filter.swift", "bloom_filter.py", "bloom_filter.cpp", "bloom_filter.java", "bloom_filter.c", "bloom_filter.scala"], "data_structures/src/bag": ["bag.java", "bag.py", "bag.js"], "data_structures/src/stack/postfix_evaluation": ["README.md", "postfix_evaluation.sh", "postfix_evaluation.py", "postfix_evaluation.c"], "data_structures/src/stack/balanced_expression": ["balanced_expression.java"], "data_structures/src/stack/sort_stack": ["README.md", "sort_stack.cpp", "sort_stack.py", "sort_stack.c"], "data_structures/src/stack/infix_to_postfix": ["infix_to_postfix.java", "infix_to_postfix.cpp", "README.md", "infix_to_postfix.py", "infix_to_postfix.c"], "data_structures/src/stack/stack": ["stack.rs", "README.md", "stack.py", "stack.cs", "stack.php", "stack.js", "stack.rb", "stack.c", "stack.erl", "stack.go", "stack.java", "stack.swift", "stack.ex", "stack.cpp"], "data_structures/src/stack/reverse_stack": ["reverse_stack.cs", "README.md", "reverse_stack.go", "reverse_stack_without_extra_space.cpp", "reverse_stack.c", "reverse_stack.java", "reverse_stack.py", "reverse_stack.swift"], "data_structures/src/stack/abstract_stack/cpp/arrayStack": ["arraystackTester.cpp", "ArrayStack.h"], "data_structures/src/stack/prefix_to_postfix": ["README.md", "prefix_to_postfix.py"], "data_structures/src/queue/queue_stream": ["queue_stream.cs"], "data_structures/src/queue/queue_using_stack": ["queue_using_stack.cpp", "queue_using_stack.sh", "queue_using_stack.java"], "data_structures/src/queue/circular_buffer": ["circular_buffer.py", "circular_buffer.cpp"], "data_structures/src/queue/reverse_queue": ["reverse_queue.java", "reverse_queue.py", "reverse_queue.cpp", "reverse_queue.go", "reverse_queue.swift"], "data_structures/src/queue/queue_using_linked_list": ["README.md", "queue_using_linked_list.java", "queue_using_linked_list.rb", "queue_using_linked_list.py", "queue_using_linked_list.cpp", "queue_using_linked_list.c"], "data_structures/src/queue/queue": ["queue_vector.cpp", "README.md", "queue.exs", "queue.swift", "queue.cpp", "queue.go", "queue.cs", "queue.py", "queue.rb", "queue.java", "queue.c", "queue.js"], "data_structures/src/other": ["README.md"], "data_structures/test/list": ["test_list.cpp"], "data_structures/test/tree/binary_tree/binary_tree/diameter": ["test_diameter.cpp"], "data_structures/test/tree/binary_tree/binary_tree/is_same": ["test_is_same.cpp"], "data_structures/test/tree/binary_tree/binary_tree/path_sum": ["test_path_sum_for_sum_of_part_paths.cpp", "test_path_sum_for_whole_paths.cpp", "test_path_sum_for_sum_of_whole_paths.cpp"], "data_structures/test/tree/multiway_tree/union_find": ["test_union_find.cpp"], "data_structures/test/tree/multiway_tree/red_black_tree": ["test_red_black.c"], "randomized_algorithms/src/reservoir_sampling": ["reservoir_sampling.rs", "README.md", "reservoir_sampling.cpp"], "randomized_algorithms/src/karger_minimum_cut_algorithm": ["README.md", "karger_minimum_cut_algorithm.cpp"], "randomized_algorithms/src/random_node_linkedlist": ["README.md"], "randomized_algorithms/src/randomized_quick_sort": ["randomized_quicksort.c"], "randomized_algorithms/src/random_from_stream": ["Random_number_selection_from_a_stream.cpp"], "randomized_algorithms/src/shuffle_an_array": ["shuffle_library.rb", "shuffle_an_array.java", "README.md", "shuffle_an_array.rb", "shuffle_an_array.py", "shuffle_an_array.php", "shuffle_an_array.cpp", "shuffle_an_array.js", "shuffle_an_array.rs"], "randomized_algorithms/src/kth_smallest_element_algorithm": ["README.md", "kth_smallest_element_algorithm.cpp", "kth_smallest_element_algorithm.c"], "randomized_algorithms/test": ["README.md"], "mathematical_algorithms/src/convolution": ["convolution.cpp"], "mathematical_algorithms/src/fast_fourier_transform": ["fast_fourier_transform.java"], "mathematical_algorithms/src/add_polynomials": ["README.md", "add_polynomials.go", "add_polynomials.c", "add_polynomials.cpp"], "mathematical_algorithms/src/2sum": ["2sum.js", "2sum.py", "2sum.cpp", "2sum.rs", "2sum.java", "2sum.c", "2sum.go", "2sum.rb"], "mathematical_algorithms/src/karatsuba_multiplication": ["karatsuba_multiplication.java"], "mathematical_algorithms/src/replace_0_with_5": ["replace_0_with_5.go", "replace_0_with_5.cpp", "replace_0_with_5.py", "replace_0_with_5.java", "replace_0_with_5.c", "0_to_5_efficent.cpp", "replace_0_with_5.js"], "mathematical_algorithms/src/armstrong_numbers": ["README.md", "armstrong_numbers.rb", "armstrong_numbers.c", "armstrong_numbers.js", "armstrong_numbers.go", "armstrong_numbers.java", "armstrong_number.php", "armstrong_numbers.py", "armstrong_numbers.cpp", "armstrong_numbers.cs"], "mathematical_algorithms/src/sieve_of_eratosthenes": ["sieve_of_eratosthenes_linear.cpp", "sieve_of_eratosthenes.php", "README.md", "sieve_of_eratosthenes.c", "sieve_of_eratosthenes_compact.cpp", "sieve_of_eratosthenes.java", "sieve_of_eratosthenes.go", "sieve_of_eratosthenes.hs", "sieve_of_eratosthenes.cs", "sieve_of_eratosthenes.cpp", "sieve_of_eratosthenes.js", "sieve_of_eratosthenes.py"], "mathematical_algorithms/src/euler_totient": ["README.md", "euler_totient.py", "euler_totient_sieve.cpp", "euler_totient.c", "euler_totient_sieve.py", "euler_totient.java", "euler_totient.cpp"], "mathematical_algorithms/src/fibonacci_number": ["fibonacci_number.cs", "fibonacci_number.hs", "README.md", "fibonacci_number.java", "fibonacci_memorized.swift", "fibonacci_number.cpp", "fibonacci_matrix_exponentiation.cpp", "fibonacci_for_big_numbers.cpp", "fibonacci_number.erl", "fast_fibonacci.c", "fibonacci_number.rs", "fibonacci_number.ex", "fibonacci_lucas.py", "fibonacci_number.scala", "fibonacci_number.swift", "fibonacci_number.go", "fibonacci_number.rb", "fibonacci_number.c", "fibonacci_matrix_multiplication.py", "fibonacci_number.php", "fibonacci_number.js", "fibonacci_number.clj", "fibonacci_number.py"], "mathematical_algorithms/src/horner_polynomial_evaluation": ["README.md", "horner_polynomial_evaluation.cpp", "horner_polynomial_evaluation.java"], "mathematical_algorithms/src/russian_peasant_multiplication": ["russian_peasant_multiplication.cs", "README.md", "russian_peasant_multiplication.js", "russian_peasant_multiplication.rs", "russian_peasant_multiplication.c", "russian_peasant_multiplication.py", "russian_peasant_multiplication.go", "russian_peasant_multiplication.php", "russian_peasant_multiplication.cpp"], "mathematical_algorithms/src/babylonian_method": ["README.md", "babylonian_method.go", "babylonian_method.cpp", "babylonian_method.java", "babylonian_method.c", "Babylonian_method.py", "babylonian_method.js"], "mathematical_algorithms/src/fast_inverse_sqrt": ["fast_inverse_sqrt.cpp"], "mathematical_algorithms/src/sieve_of_atkin": ["sieve_of_atkin.cpp", "sieve_of_atkin.c", "sieve_of_atkin.py", "sieve_of_atkin.java"], "mathematical_algorithms/src/permutation_lexicographic_order": ["permutation_lexicographic_order.cpp", "README.md"], "mathematical_algorithms/src/segmented_sieve_of_eratosthenes": ["segmented_sieve_of_eratosthenes.cpp"], "mathematical_algorithms/src/std": ["std.py", "std.c", "std.go", "std.cpp", "std.js"], "mathematical_algorithms/src/gcd_and_lcm": ["gcd_and_lcm.cpp", "gcd_and_lcm.java", "gcd_and_lcm.js", "gcd_and_lcm.c", "gcd_and_lcm.cs", "gcd_and_lcm.scala", "gcd_and_lcm.py", "gcd_and_lcm.ex", "gcd_and_lcm.php", "gcd_and_lcm.go", "gcd_and_lcm.erl"], "mathematical_algorithms/src/amicable_numbers": ["amicable_numbers.cpp", "amicable_numbers.py", "amicable_numbers.rs", "amicable_numbers.rb", "amicable_numbers.c", "amicable_numbers.cs", "amicable_numbers.js", "amicable_numbers.go", "amicable_numbers.java"], "mathematical_algorithms/src/lucas_theorem": ["lucas_theorem.cpp"], "mathematical_algorithms/src/sum_of_digits": ["sum_of_digits.java", "sum_of_digits.swift", "sum_of_digits_with_recursion.c", "sum_of_digits.php", "sum_of_digits.c", "sum_of_digits.rs", "sum_of_digits.rb", "sum_of_digits.py", "sum_of_digits.cs", "sum_of_digits.ex", "sum_of_digits.js", "sum_of_digits.go", "sum_of_digits.cpp"], "mathematical_algorithms/src/pandigital_number": ["README.md", "pandigital_number.rb", "pandigital_number.c"], "mathematical_algorithms/src/next_larger_number": ["next_larger_number.cpp", "next_larger_number.php", "next_larger_number.py", "next_larger_number.java"], "mathematical_algorithms/src/tridiagonal_matrix": ["README.md", "tridiagonal_matrix.java"], "mathematical_algorithms/src/gaussian_elimination": ["gaussian_elimination.java", "gaussian_elimination.cpp"], "mathematical_algorithms/src/shuffle_array": ["README.md", "shuffle_array.js", "shuffle_array.rb", "shuffle_array.cpp"], "mathematical_algorithms/src/newton_polynomial": ["newton_polynomial.java", "README.md"], "mathematical_algorithms/src/average_stream_numbers": ["README.md", "average_stream_numbers.c", "average_stream_numbers.py", "average_stream_numbers.cpp", "average_stream_numbers.go"], "mathematical_algorithms/src/delannoy_number": ["README.md", "delannoy_number.c", "delannoy_number.cpp"], "mathematical_algorithms/src/magic_square": ["README.md", "magic_square.py"], "mathematical_algorithms/src/check_is_square": ["check_is_square.go", "check_is_square.cpp", "check_is_square.swift", "check_is_square.cs", "check_is_square.scala", "check_is_square.java", "check_is_square.ruby", "check_is_square.php", "check_is_square.py", "check_is_square.js", "check_is_square.rs", "check_is_square.c"], "mathematical_algorithms/src/largrange_polynomial": ["README.md", "lagrange_polynomial.java"], "mathematical_algorithms/src/poisson_sample": ["poisson_sample.py"], "mathematical_algorithms/src/divided_differences": ["README.md", "divided_differences.java"], "mathematical_algorithms/src/factorial": ["factorial.scala", "factorial.hs", "factorial_iteration.js", "factorial.go", "factorial.clj", "factorial.ex", "factorial.rb", "factorial_recursion.cs", "factorial_iteration.py", "factorial_recursion.c", "factorial_recursion.cpp", "factorial.java", "factorial_iteration.c", "factorial.swift", "factorial.rs", "factorial.erl", "factorial-hrw.py", "factorial_recursion.py", "factorial_iteration.cs", "factorial.c", "factorial.php", "factorial_recursion.js"], "mathematical_algorithms/src/decoding_of_string": ["README.md"], "mathematical_algorithms/src/binomial_coefficient": ["binomial_coefficient.py", "README.md", "binomial_coefficient.cpp", "binomial_coefficient.c", "binomial_coefficient.java", "binomial_coefficient.go"], "mathematical_algorithms/src/lucky_number": ["README.md", "lucky_number.java", "lucky_number.c"], "mathematical_algorithms/src/integer_conversion": ["decimal_to_bin.cpp", "decimal_to_any_base.py", "decimal_to_int.go", "decimal_to_any_base.js", "decimal_to_hex.cpp", "decimal_to_oct.cpp"], "mathematical_algorithms/src/pythagorean_triplet": ["pythagorean_triplet.cpp"], "mathematical_algorithms/src/reverse_number": ["reverse_number.cpp", "reverse_number.rb", "reverse_number.cs", "reverse_number.swift", "reverse_number_recursion.java", "reverse_number.py", "reverse_number.js", "reverse_number.go", "Reverse_a_number.c", "reverse_number.java", "reverse_number.hs", "reverse_number.php", "reverse_number.c"], "mathematical_algorithms/src/steepest_descent": ["steepest_descent.cpp"], "mathematical_algorithms/src/primality_tests/fermat_primality_test": ["fermat_primality_test.c"], "mathematical_algorithms/src/primality_tests/solovay-strassen_primality_test": ["solovay-strassen_primality_test.cpp"], "mathematical_algorithms/src/primality_tests/miller_rabin_primality_test": ["miller_rabin_primality_test.cpp", "miller_rabin_primality_test.py"], "mathematical_algorithms/src/catalan_number": ["README.md", "catalan_number.js", "catalan_number_recursive.cpp", "catalan_number.py", "catalan_number.rb", "catalan_number_dynamic.cpp", "catalan_number.java", "catalan_number2.py", "catalan_number.scala", "catalan_number.c"], "mathematical_algorithms/src/newton_raphson_method": ["README.md", "newton_raphson.cpp", "newton_raphson.c", "newton_raphson.php"], "mathematical_algorithms/src/integer_to_roman": ["integer_to_roman.cpp", "integer_to_roman.py", "integer_to_roman.js"], "mathematical_algorithms/src/reverse_factorial": ["README.md", "reverse_factorial.go", "reverse_factorial.java", "reverse_factorial.py", "reverse_factorial.c", "reverse_factorial.js", "reverse_factorial.rb"], "mathematical_algorithms/src/derangements": ["derangements.c"], "mathematical_algorithms/src/automorphic_numbers": ["README.md", "automorphic_numbers.swift", "automorphic_numbers.cpp", "automorphic_numbers.go", "automorphic_numbers.php", "automorphic_numbers.rb", "automorphic_numbers.py", "automorphic_numbers.hs", "automorphic_numbers.js", "automorphic_numbers.java", "automorphic_numbers.c", "automorphic_numbers.cs"], "mathematical_algorithms/src/tower_of_hanoi": ["tower_of_hanoi.rs", "tower_of_hanoi.cpp", "README.md", "tower_of_hanoi.go", "tower_of_hanoi_binary_solution.c", "tower_of_hanoi.c", "tower_of_hanoi.ml", "tower_of_hanoi.java", "tower_of_hanoi.hs", "tower_of_hanoi.scala", "tower_of_hanoi.py", "tower_of_hanoi_iterative.c", "tower_of_hanoi.js"], "mathematical_algorithms/src/greatest_digit_in_number": ["greatest_digit_in_number.py", "greatest_digit_in_number.c", "greatest_digit_in_number.rb", "greatest_digit_in_number.js", "greatest_digit_in_number.cpp", "greatest_digit_in_number.java", "greatest_digit_in_number.cs", "greatest_digit_in_number.hs", "greatest_digit_in_number.php"], "mathematical_algorithms/src/count_digits": ["count_digits.py", "count_digits.cpp", "count_digits.js", "counts_digits.rb", "count_digits.c", "count_digits.java", "count_digits.go", "count_digits.cs", "count_digits.swift", "count_digits.hs"], "mathematical_algorithms/src/prime_numbers_of_n": ["README.md", "prime_numbers_of_n.cpp", "prime_numbers_of_n.c", "prime_numbers_of_n.py"], "mathematical_algorithms/src/lexicographic_string_rank": ["README.md", "lexicographic_string_rank.cpp", "lexicographic_string_rank.java", "lexicographic_string_rank.py", "lexicographic_string_rank.c"], "mathematical_algorithms/src/taxicab_numbers": ["taxicab_numbers.py"], "mathematical_algorithms/src/multiply_polynomial": ["README.md", "multiply_polynomial.cpp"], "mathematical_algorithms/src/count_trailing_zeroes": ["count_trailing_zeroes_factorial.py", "count_trailing_zeroes_factorial.js", "count_trailing_zeroes_factorial.java", "count_trailing_zeroes.c", "count_trailing_zeroes.scala", "count_trailing_zeroes_factorial.cpp"], "mathematical_algorithms/src/log_of_factorial": ["log_of_factorial.cpp", "log_of_factorial.py", "log_of_factorial.c"], "mathematical_algorithms/src/diophantine": ["diophantine.cpp"], "mathematical_algorithms/src/coprime_numbers": ["coprime_numbers.cpp", "coprime_numbers.go", "coprime_numbers.c", "coprime_numbers.py", "coprime_numbers.rb", "coprime_numbers.rs", "coprime_numbers.cs", "coprime_numbers.js"], "mathematical_algorithms/src/hill_climbing": ["hill_climbing.java"], "mathematical_algorithms/src/fermats_little_theorem": ["fermats_little_theorem.py", "fermats_little_theorem.cpp"], "mathematical_algorithms/src/exponentiation_power/exponentiation_by_squaring": ["exponentiation_by_squaring.cpp", "exponentiation_by_squaring.py", "exponentiation_by_squaring.go", "exponentiation_by_squaring.c"], "mathematical_algorithms/src/smallest_digit_in_number": ["smallest_digit_in_number.js", "smallest_digit_in_number.rb", "smallest_digit_in_number.php", "smallest_digit_in_number.py", "smallest_digit_in_number.cpp", "smallest_digit_in_number.c", "smallest_digit_in_number.java", "Smallest_digit_in_number.hs"], "mathematical_algorithms/src/tribonacci_numbers": ["tribonacci_numbers.java", "tribonacci_numbers.cpp", "tribonacci_numbers.go", "tribonacci_numbers.py", "tribonacci_numbers.rs", "Tribonnaci.java", "tribonacci_numbers.c"], "mathematical_algorithms/src/simpsons_rule": ["simpsons_rule.py"], "mathematical_algorithms/src/perfect_number": ["README.md", "perfect_number.java", "perfect_number_list.cpp", "perfect_number.cpp", "perfect_number.py", "perfect_number.php", "perfect_number.hs", "perfect_number.js", ".gitignore", "perfect_number.rs", "perfect_number.rb", "perfect_number.c"], "mathematical_algorithms/src/prime_factors": ["sum_of_primes.cpp", "prime_factors.cpp", "prime_factors.py", "prime_factors.go", "prime_factors.c", "prime_factors.java"], "mathematical_algorithms/src/fractals": ["simple_julia.cpp", "julia_miim.cpp"], "mathematical_algorithms/src/modular_inverse": ["modular_inverse.java", "modular_inverse.py", "modular_inverse.rb", "modular_inverse.cpp"], "mathematical_algorithms/src/jacobi_method": ["jacobi_method.java", "README.md"], "mathematical_algorithms/src/pascal_triangle": ["README.md", "pascal_triangle.java", "pascal_triangle.cpp", "pascal_triangle.c", "pascal_triangle.py", "pascal_triangle.exs", "pascal_triangle.go"], "mathematical_algorithms/src/dfa_division": ["README.md"], "mathematical_algorithms/test": ["README.md", "test_exponentiation_by_squaring.c"], "sorting/src/bucket_sort": ["README.md", "bucket_sort.c", "bucket_sort.php", "bucket_sort.swift", "bucket_sort.cpp", "bucket_sort.java", "bucket_sort.m", "bucket_sort.rb", "bucket_sort.cs", "bucket_sort.go", "bucket_sort.py", "bucket_sort.js", "bucket_sort.hs"], "sorting/src/median_sort": ["median_sort.cs", "median_sort.py", "median_sort.swift", "median_sort.m", "median_sort.cpp", "median_sort_fast.cpp"], "sorting/src/counting_sort": ["README.md", "counting_sort.cs", "counting_sort.cpp", "counting_sort.py", "counting_sort.m", "counting_sort.java", "counting_sort.js", "counting_sort.go", "counting_sort.swift", "counting_sort.c"], "sorting/src/selection_sort": ["selection_sort.rb", "selection_sort.c", "selection_sort.rs", "selection_sort.php", "README.md", "selection_sort.java", "selection_sort.cs", "selection_sort.cpp", "selection_sort.go", "selection_sort.vb", "selection_sort.js", "selection_sort.swift", "selection_sort.hs", "selection_sort.sh", "selection_sort.m", "selection_sort.kt", "selection_sort.py"], "sorting/src/radix_sort": ["radix_sort.js", "README.md", "radix_sort.java", "radix_sort.c", "radix_sort.cpp", "radix_sort.hs", "radix_sort.py", "radix_sort.rs", "radix_sort.go"], "sorting/src/bubble_sort": ["bubble_sort.go", "bubble_sort.m", "README.md", "bubble_sort.c", "bubble_sort.php", "bubble_sort.cpp", "bubble_sort_efficient.cpp", "bubble_sort.kt", "bubble_sort.rb", "bubble_sort.elm", "bubble_sort.jl", "bubble_sort.ts", "Bubble_sort.f", "bubble_sort.py", "bubble_sort.cs", "bubble_sort.exs", "bubble_sort.swift", "bubble_sort.hs", "bubble_sort.java", "bubble_sort.rs", "bubble_sort.js", "bubble_sort.sh", "bubble_sort.sml"], "sorting/src/insertion_sort": ["insertion_sort.ml", "insertion_sort.js", "insertion_sort.go", "README.md", "insertion_sort.hs", "insertion_sort.swift", "insertion_sort.c", "insertion_sort.sh", "insertion_sort.m", "insertion_sort.java", "insertion_sort.cpp", "insertion_sort.cs", "insertion_sort.rb", "insertion_sort.py", "insertion_sort.php", "insertion_sort.rs"], "sorting/src/tree_sort": ["tree_sort.cpp", "tree_sort.js", "tree_sort.go", "tree_sort.c", "tree_sort.java", "tree_sort.py"], "sorting/src/shell_sort": ["README.md", "shell_sort.swift", "shell_sort.cpp", "shell_sort.py", "shell_sort.js", "shell_sort.c", "shell_sort.java", "shell_sort.m", "shell_sort.go"], "sorting/src/quick_sort": ["quick_sort.swift", "quick_sort.lua", "quick_sort.ts", "README.md", "quick_sort.cpp", "quick_sort_three_way.cpp", "quick_sort.rb", "quick_sort.hs", "quick_sort.elm", "quick_sort.rs", "quick_sort.py", "quick_sort.scala", "quick_sort.sh", "quick_sort.m", "quick_sort_in_place.scala", "quick_sort.go", "quick_sort.java", "dutch_national_flag.cpp", "quick_sort_median_of_medians.c", "quick_sort.c", "quick_sort.cs", "quick_sort.js", "quick_sort.ml"], "sorting/src/sleep_sort": ["sleep_sort.js", "sleep_sort.cpp", "sleep_sort.c", "README.md", "sleep_sort.jl", "sleep_sort.cs", "sleep_sort.py", "sleep_sort.php", "sleep_sort.go", "sleep_sort.sh", "sleep_sort.rb", "sleep_sort.swift", "sleep_sort.m", "sleep_sort.java", "sleep_sort.scala"], "sorting/src/bead_sort": ["README.md", "bead_sort.c", "bead_sort.java", "bead_sort.cpp", "bead_sort.cs", "bead_sort_numpy.py", "bead_sort.js", "bead_sort.swift", "bead_sort.m", "bead_sort.py", "bead_sort.php"], "sorting/src/stooge_sort": ["stooge_sort.java", "README.md", "stooge_sort.go", "stooge_sort.py", "stooge_sort.js", "stooge_sort.c"], "sorting/src/shaker_sort": ["shaker_sort.php", "README.md", "shaker_sort.java", "shaker_sort.rs", "shaker_sort.c", "shaker_sort.js", "shaker_sort.m", "shaker_sort.swift", "shaker_sort.cs", "shaker_sort.go", "shaker_sort.py", "shaker_sort.cpp"], "sorting/src/flash_sort": ["flash_sort.swift", "README.md", "flash_sort.m", "flash_sort.js", "flash_sort.c"], "sorting/src/comb_sort": ["README.md", "comb_sort.c", "comb_sort.swift", "comb_sort.go", "comb_sort.cpp", "comb_sort.m", "comb_sort.js", "comb_sort.java"], "sorting/src/topological_sort": ["topological_sort.java", "topological_sort.c", "topological_sort.cpp"], "sorting/src/gnome_sort": ["gnome_sort.cpp", "gnome_sort.java", "gnome_sort.c", "gnome_sort.m", "gnome_sort.swift", "gnome_sort.py"], "sorting/src/heap_sort": ["README.md", "heap_sort.sc", "heap_sort.cs", "heap_sort.rb", "heap_sort.py", "heap_sort.java", "heap_sort.cpp", "heap_sort.go", "heap_sort.m", "heap_sort.c", "heap_sort.js", "heap_sort.rs", "heap_sort.swift"], "sorting/src/intro_sort": ["intro_sort.cpp", "intro_sort.m", "intro_sort.swift"], "sorting/src/pigeonhole_sort": ["pigeonhole_sort.java", "pigeonhole_sort.cs", "README.md", "pigeonhole_sort.swift", "pigeonhole_sort.c", "pigeonhole_sort.py", "pigeonhole_sort.m", "pigeonhole_sort.cpp", "PigeonHoleSort.scala"], "sorting/src/merge_sort": ["merge_sort.sh", "README.md", "merge_sort.pl", "merge_sort.ts", "merge_sort.js", "merge_sort.php", "merge_sort.py", "merge_sort.scala", "merge_sort.m", "merge_sort.cpp", "merge_sort.fs", "merge_sort.swift", "merge_sort.rb", "merge_sort.go", "merge_sort.c", "merge_sort.rs", "merge_sort.cs", "merge_sort.java", "merge_sort.hs", "merge_sort_linked_list.c"], "sorting/src/bogo_sort": ["README.md", "bogo_sort.py", "bogo_sort.c", "bogo_sort.fs", "bogo_sort.swift", "bogo_sort.go", "bogo_sort.java", "bogo_sort.cpp", "bogo_sort.js", "bogo_sort.m", "bogo_sort.rb"], "sorting/src/cycle_sort": ["cycle_sort.m", "README.md", "cycle_sort.js", "cycle_sort.py", "cycle_sort.java", "cycle_sort.go", "cycle_sort.swift", "cycle_sort.cpp", "cycle_sort.cs", "cycle_sort.c"], "sorting/src/circle_sort": ["circle_sort.swift", "circle_sort.cs", "circle_sort.js", "circle_sort.py", "circle_sort.c", "circle_sort.cpp", "circle_sort.m", "circle_sort.java"], "sorting/test": ["test_sort.py", "README.md", "test_sort.cpp"], "backtracking/src/m_coloring_problem": ["m_coloring.py"], "backtracking/src/number_of_ways_in_maze": ["README.md", "no_of_ways_in_maze.rs", "no_of_ways_in_maze.java", "number_of_ways_in_maze.cpp", "no_of_ways_in_maze.go", "noOfWaysinMaze.c"], "backtracking/src/n_queen": ["n_queen.c", "nQueen.hs", "NQueen.java", "README.md", "Nqueen_Backtracking.rs", "nqueen.go", "NQueen_Backtracking.cpp", "nqueen_bit.go", "NQueen_Bitset.cpp", "nqueen.py", "NQueen_BitImp.cpp"], "backtracking/src/powerset": ["powerset.go", "PowerSet.java"], "backtracking/src/algorithm-x": ["README.md", "algo-x.cpp"], "backtracking/src/partitions_of_set": ["README.md", "set_partitions.go", "set_partitions.cpp"], "backtracking/src/partitions_of_number": ["README.md", "partitions_of_number.go", "partitions_of_number.cpp", "partitions_of_number.rs"], "backtracking/src/crossword_puzzle": ["CrosswordPuzzle.java"], "backtracking/src/rat_in_a_maze": ["README.md", "rat_in_a_maze.cpp"], "backtracking/src/sudoku_solve": ["README.md", "SudokuSolve.c", "sudoku_solve.py", "SudokuSolve.cpp"], "backtracking/src/permutations_of_string": ["README.md", "permutations_of_string.c", "permutations_of_string.py", "permutations_of_string_itertools.py", "permutations_of_string_stl.cpp", "permutations_of_string.kt", "permutations_of_string.go"], "backtracking/src/knight_tour": ["knight_tour.cpp", "README.md", "knight_tour.rs", "knight_tour.py", "knight_tour.go", "knight_tour.c", "knight_tour_withoutBT.c", "knight_tour.java"], "backtracking/src/subset_sum": ["subset_sum.cpp", "SubsetSum.java", "README.md", "Subset_Sum.c", "subset_sum.go", "SubsetSum.py", "Subset_Sum_Duplicates.py"], "backtracking/test": ["README.md"], "unclassified/src/jaccard_similarity": ["README.md", "jaccard.py", "jaccard.java", "jaccard.c"], "unclassified/src/biggest_of_n_numbers": ["biggest_of_n_numbers2.cpp", "biggest_of_n_numbers.c", "biggest_of_n_numbers.py", "biggest_of_n_numbers.cpp"], "unclassified/src/paint_fill": ["paint_fill.cpp"], "unclassified/src/minimum_subarray_size_with_degree": ["minSubarraySizeWithDegree.cpp"], "unclassified/src/magic_square": ["magic_square.py", "magic_square.c", "magic_square.swift", "magic_square.php"], "unclassified/src/average": ["average.rb", "average.es6.js", "average.rs", "average.swift", "average.c", "average.php", "average.cpp", "average.java", "average.go", "average.py", "average.js", "average.erl", "average.scala", "average.ex"], "unclassified/src/majority_element": ["majority_element.cpp"], "unclassified/src/leap_year": ["leap_year.py", "leap_year.cpp", "leap_year.c", "README.txt"], "unclassified/src/utilities": ["download_link.sh", "convert2mp3.sh"], "unclassified/src/spiral_printing": ["spiral_print.cpp", "spiral.c", "spiral_print_array.py", "spiral_print.go"], "unclassified/src/josephus_problem": ["josephus.c", "josephus.go", "josephus.cpp", "josephus.py"], "unclassified/src/tokenizer": ["tokenizer.cpp"], "unclassified/src/biggest_suffix": ["biggest_suffix.c"], "unclassified/src/lapindrom_checker": ["lapindrome_checker.py", "lapindrome_checker.cpp"], "unclassified/src/split_list": ["split_list.py"], "unclassified/src/fifteen_puzzle": ["readme.md", "fifteen.c", "Makefile", "log.txt"], "unclassified/test": ["README.md"], "design_pattern/src/singleton_pattern": ["singleton_pattern.cpp", "singleton_pattern.php", "singleton_pattern.java"], "design_pattern/src/observer_pattern": ["observer_pattern.cpp", "observer_pattern.rs"], "design_pattern/test": ["README.md"], "artificial_intelligence/src/SAT": ["togasat.cpp"], "artificial_intelligence/src/random_forests": ["README.md"], "artificial_intelligence/src/t_distributed_stochastic_neighbor_embedding": ["README.md"], "artificial_intelligence/src/nearest_sequence_memory/nsm_MATLAB": ["simulator.m", "nsm_agent.m", "main.m"], "artificial_intelligence/src/factorization_machines": ["README.md"], "artificial_intelligence/src/principal_component_analysis": ["README.md", "pca.py"], "artificial_intelligence/src/naive_bayes": ["README.md", "naive_bayes.swift"], "artificial_intelligence/src/DBSCAN_Clustering": ["readme.md", "dbscan.py"], "artificial_intelligence/src/TSP": ["euc_500", "noneuc_250", "euc_100", "salesman.cpp", "algo.md", "euc_250", "noneuc_100", "Makefile", "noneuc_500"], "artificial_intelligence/src/hierachical-clustering": ["README.md", "hierachical_clustering.cpp"], "artificial_intelligence/src/decision_tree": ["data_banknote_authentication.csv", "decision_tree.py"], "artificial_intelligence/src/k_Nearest_Neighbours": ["iris.data", "k_Nearest_Neighbours.py"], "artificial_intelligence/src/ISODATA_Clustering": ["readme.md", "ISODATA.py"], "artificial_intelligence/src/q_learning": ["README.md", "qLearning.js"], "artificial_intelligence/src/neural_network": ["neuralnetwork.py"], "artificial_intelligence/src/Logistic_Regression": ["README.md", "Logistic_Regression.py"], "artificial_intelligence/src/gradient_boosting_trees": ["README.md"], "artificial_intelligence/src/support_vector_machine": ["README.md"], "artificial_intelligence/src/k_means": ["README.md", "k_means.py", "k_means.cpp", "k_means.swift"], "artificial_intelligence/src/gaussian_mixture_model": ["README.md"], "artificial_intelligence/src/restricted_boltzmann_machine": ["README.md"], "artificial_intelligence/src/Linear_Regression": ["linear_regression.py", "README.md", "LinearRegression.java", "linearRegression.js", "linear_regression.swift"], "artificial_intelligence/test": ["README.md"], "utility/src/palindrome/palindrome_check": ["palindrome_check.cpp", "palindrome_check.rb"], "utility/test/palindrome/palindrome_check": ["README.md", "test_palindrome_check.cpp"], "graph_algorithms/src/kruskal_minimum_spanning_tree": ["README.md", "kruskal_minimum_spanning_tree.c", "kruskal_minimum_spanning_tree.java", "kruskal_minimum_spanning_tree.py", "kruskal_minimum_spanning_tree.cpp"], "graph_algorithms/src/biconnected_components": ["README.md", "biconnected_components.java", "biconnected_components.cpp"], "graph_algorithms/src/fleury_algorithm_euler_path": ["README.md"], "graph_algorithms/src/bridges_in_graph": ["README.md", "bridges.cpp"], "graph_algorithms/src/eulerian_path": ["README.md", "eulerian.py", "eulerian.java"], "graph_algorithms/src/boruvka_minimum_spanning_tree": ["boruvka_minimum_spanning_tree.cpp", "README.md"], "graph_algorithms/src/adjacency_lists_graph_representation/adjacency_lists_in_C": ["main.c", "lgraph_struct.c", "lgraph_stack.h", "lgraph_stack.c", "README.MD", "lgraph_struct.h"], "graph_algorithms/src/hamiltonian_cycle": ["hamiltonian_cycle.py", "README.md"], "graph_algorithms/src/connected_components": ["connected_components.c"], "graph_algorithms/src/bron_kerbosch_algorithm": ["bron_kerbosch.java"], "graph_algorithms/src/channel_assignment": ["README.md"], "graph_algorithms/src/floyd_warshall_algorithm": ["floydWarshall.c", "README.md", "floyd_warshall.cpp", "floyd_warshall.py", "FloydWarshall.java"], "graph_algorithms/src/astar_algorithm": ["astar.js"], "graph_algorithms/src/graph_coloring": ["README.md", "graph_color_greedy.py", "graph_coloring.cpp", "graph_coloring.java"], "graph_algorithms/src/hamiltonian_path": ["hamiltonian_path.cpp"], "graph_algorithms/src/kuhn_maximum_matching": ["kuhn_maximum_matching.cpp"], "graph_algorithms/src/breadth_first_search": ["bfs.rb", "breadth_first_search.py", "bfs.c", "README.md", "breadth_first_search.swift", "Bfs.java", "bfs.cpp"], "graph_algorithms/src/cut_vertices": ["README.md", "cut_vertices.cpp"], "graph_algorithms/src/longest_path_directed_acyclic_graph": ["README.md", "longest_path_directed_acyclic_graph.cpp"], "graph_algorithms/src/dijkstra_shortest_path": ["README.md", "dijkstra.cpp", "Dijkstra_Algorithm.c", "dijkstra_gnu_fast.cpp", "Dijkstra.py", "dijkstra_efficient.py"], "graph_algorithms/src/bridge_tree": ["bridge_tree.cpp"], "graph_algorithms/src/travelling_salesman_mst": ["README.md", "Travelling_salesman.cpp", "travelling_salesman.py"], "graph_algorithms/src/prim_minimum_spanning_tree": ["prim_minimum_spanning_tree.py", "README.md", "prim_minimum_spanning_tree.cpp", "prim_minimum_spanning_tree.c"], "graph_algorithms/src/cycle_directed_graph": ["cycle_directed_graph.cpp", "README.md", "cycle_directed_graph.py", "cycle_directed_graph.c", "cycle_directed_detection.c"], "graph_algorithms/src/data_structures/adjacency_matrix_C": ["main.c", "mgraph_struct.c", "mgraph_struct.h"], "graph_algorithms/src/strongly_connected_components": ["README.md", "strongly_connected_components.cpp", "strongly_connected_components.py"], "graph_algorithms/src/Bipartite_check": ["Bipartite_check.java"], "graph_algorithms/src/tarjan_algorithm_strongly_connected_components": ["README.md", "tarjan_algorithm.c"], "graph_algorithms/src/maximum_bipartite_matching": ["README.md", "max_bipartite_matching.py"], "graph_algorithms/src/topological_sort": ["README.md", "topological_sort_adjacency_list2.java", "topological_sort.hs", "topological_sort_adjacency_matrix.java", "topological_sort.py", "kahn_algo_unique_toposort.cpp", "topological_sort_adjacency_matrix2.java", "print_all_topological_sorts.cpp", "topological_sort_adjacency_list.java", "topological_sort.c", "topological_sort.cpp"], "graph_algorithms/src/vertex_cover": ["README.md"], "graph_algorithms/src/cycle_undirected_graph": ["CheckCycle.java", "README.md", "cycleGraph.cpp", "cycle_undirected_graph.py", "cycle_using_union_find_datastructure.cpp"], "graph_algorithms/src/postorder_from_inorder_and_preorder": ["inprepost.cpp"], "graph_algorithms/src/hopcroft_karp_algorithm": ["README.md"], "graph_algorithms/src/minimum_s_t_cut": ["README.md"], "graph_algorithms/src/dinic_maximum_flow": ["dinic_maximum_flow.cpp"], "graph_algorithms/src/shortest_path_k_edges": ["README.md"], "graph_algorithms/src/karger_minimum_cut": ["karger.java", "README.md"], "graph_algorithms/src/ford_fulkerson_maximum_flow": ["ford_fulkerson_using_bfs.py", "README.md", "ford_fulkerson.cpp", "FordFulkersonUsingBfs.java", "ford_fulkerson_using_bfs.cpp"], "graph_algorithms/src/left_view_binary_tree": ["left_view_binary_tree.cpp", "left_view_binary.py"], "graph_algorithms/src/bipartite_checking": ["README.md", "bipartite_checking.cpp", "bipartite.cpp", "bipartite_bfs.java", "bipartite_graph_checked_adjacency_list.java"], "graph_algorithms/src/count_of_ways_n": ["Count_of_ways_n.cpp"], "graph_algorithms/src/depth_first_search": ["README.md", "depth_first_search.py", "dfs.go", "Dfs.kt", "dfs.c", "dfs.rb", "Dfs.java", "dfs.cpp"], "graph_algorithms/src/johnson_algorithm_shortest_path": ["README.md", "johnsons_algo.py"], "graph_algorithms/src/centroid_decomposition": ["centroid_decomposition.java"], "graph_algorithms/src/steiner_tree": ["steiner_tree.java"], "graph_algorithms/src/transitive_closure_graph": ["README.md", "transitive_closure_graph_floyd_warshall.cpp", "transitive_closure_graph.py", "transitive_closure.cpp"], "graph_algorithms/src/bellman_ford_algorithm": ["README.md", "bellman_ford.py", "bellman_ford.c", "bellman_ford.php", "bellman_ford_adjacency_list.java", "bellman_ford_edge_list.java", "bellman_ford.cpp"], "graph_algorithms/src/maximum_edge_disjoint_paths": ["README.md"], "graph_algorithms/test": ["README.md"], "compression/src/lossless_compression/lempel-ziv-welch": ["README.md", "lzw.cpp", "lzw.py"], "compression/src/lossless_compression/huffman": ["README.md", "huffman.cpp"], "compression/src/lossy_compression": ["README.md"], "compression/test/lossless_compression/huffman": ["test_huffman.cpp"], "square_root_decomposition/src/MOs_Algorithm": ["MOs_Algorithm.cpp"], "square_root_decomposition/test": ["README.md"], "cryptography/src/runningkey_cipher": ["runningkey.py"], "cryptography/src/columnar_transposition_cipher": ["columnar_transposition.cpp"], "cryptography/src/affine_cipher": ["affine_cipher.py", "affine.cpp", "affine.htm", "affine.py", "Affine.java"], "cryptography/src/aes_128/aes_csharp/example": ["README.md", "StreamCipherException.cs", "StreamCipher.cs"], "cryptography/src/autokey_cipher": ["autokey.py"], "cryptography/src/rail_fence_cipher": ["rail_fence.py", "rail_fence.rb", "rail_fence.cpp"], "cryptography/src/caesar_cipher": ["caesar_cipher.js", "caesar_cipher.rb", "caesar_cipher.java", "README.md", "caesar_cipher.go", "caesar_cipher.cpp", "caesar_cipher.cs", "decryption.cpp", "caesar_cipher.hs", "caesar_cipher.php", "caesar_cipher.py", "caesar_cipher.c", "encryption.cpp"], "cryptography/src/vigenere_cipher": ["README.md", "vigenere_cipher.jl", "vigenere_cipher.js", "vigenere_cipher.c", "vigenere_cipher.go", "vigenere_cipher.cpp", "vigenere_cipher.php", "vigenere_cipher.py", "vigenere_cipher.java", "vigenere_cipher.rb", "vigenere_cipher.hs"], "cryptography/src/rot13_cipher": ["rotN.js", "rotN.cpp", "README.md", "rot13.py", "rotN.c", "rot13.js", "rot13.rb", "rotN.java", "rot13.sh", "rot13.cpp"], "cryptography/src/polybius_cipher": ["polybius.py"], "cryptography/src/porta_cipher": ["porta.py"], "cryptography/src/atbash_cipher": ["README.md", "atbash_cipher.py", "atbash_cipher.cpp"], "cryptography/src/morse_cipher": ["morse_code_translator.js", "morse_code.sh", "README.md", "morse_code_translator.ts", "morse_code_translator.php", "morse_code_generator.c", "morse_code_generator.cpp", "morse_code_translator.cpp", "morse_code_translator.py", "morse_code_generator.rb", "morse_code_generator.bf", "morse_code.java", "morse_code_translator.lua"], "cryptography/src/rsa_digital_signature": ["rsa_digital_signature.ipynb"], "cryptography/src/baconian_cipher": ["baconian.py", "README.md", "baconian.php", "baconian.rb", "baconian.java"], "cryptography/src/rsa": ["rsa.py", "rsa_input.in", "rsa.cs", "RSA.java", "rsa.c"], "cryptography/src/huffman_encoding": ["huffman_encoding.c"], "cryptography/test": ["README.md"], "bit_manipulation/src/lonely_integer": ["lonely_integer.rs", "README.md", "lonelyInteger.cpp", "lonelyInteger.py", "LonelyInt.js", "LonelyInteger.c", "lonelyInteger.go", "LonelyInt.java"], "bit_manipulation/src/sum_binary_numbers": ["README.md", "sum_binary_numbers.c"], "bit_manipulation/src/byte_swapper": ["ByteSwapper.java"], "bit_manipulation/src/flip_bits": ["flippingbits.py", "README.md", "FlipBits.java", "flippingbits.cpp", "flippingbits.c"], "bit_manipulation/src/sum_equals_xor": ["README.md", "sum_equals_xor.cpp", "sum_equals_xor.py", "sum_equals_xor.c"], "bit_manipulation/src/thrice_unique_number": ["thrice_unique_number.js", "README.md", "uniqueNumber.py", "threeUnique.cpp", "ThriceUniqueNumber.java"], "bit_manipulation/src/power_of_2": ["PowerOf2.cs", "power_of_2.jl", "power_of_2.go", "power_of_2.c", "PowerOf2.java", "power_of_2.cpp", "power_of_2.py", "power_of_2.rs", "power_of_2.js"], "bit_manipulation/src/twice_unique_number": ["README.md", "two_unique_numbers.c", "two_unique_numbers.cpp"], "bit_manipulation/src/maximum_xor_value": ["README.md", "max_xor_value.cpp"], "bit_manipulation/src/bit_division": ["README.md", "BitDivision.java", "bitDivision.c", "bitDivison.py", "bitDivision.go", "bitDivision.js"], "bit_manipulation/src/count_set_bits": ["README.md", "countSetBits.js", "count_set_bits.c", "CountSetBits.java", "count_set_bits.py", "count_set_bits.cpp", "count_set_bits_lookup_table.cpp"], "bit_manipulation/src/invert_bit": ["invert_bit.py", "invert_bit.cpp", "invert_bit.c"], "bit_manipulation/src/magic_number": ["magic_number.java", "README.md", "magic_number.py", "magic_number.c", "nth_magic_number.cpp"], "bit_manipulation/src/hamming_distance": ["README.md", "hamming_distance.java", "hamming_distance2.py", "hamming_distance.py", "hamming_distance.c", "hamming_distance.cpp"], "bit_manipulation/src/xor_swap": ["README.md", "xor_swap.c", "xor_swap.cpp", "xor_swap.py", "xorSwap.go"], "bit_manipulation/src/subset_generation": ["README.md", "subsetgeneratorusingbit.cpp", "subset_mask_generator.cpp", "subsetsum.cpp"], "bit_manipulation/src/convert_number_binary": ["convert_number_binary.hs", "convert_number_binary.php", "README.md", "convert_number_binary.c", "ConvertNumberBinary.java", "convert_number_binary.js", "convert_number_binary.cpp", "intToBinary.py", "binary_to_int.py"], "bit_manipulation/test": ["README.md"]}